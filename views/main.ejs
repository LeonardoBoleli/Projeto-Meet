<!DOCTYPE html>
<html lang="pt-br">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" type="text/css" href="../www/reset.css">
        <link rel="stylesheet" type="text/css" href="../www/principal.css">
        <link rel="shortcut icon" type="image/png" href="../imagens/favicon-64x64.png">
        <script src="https://unpkg.com/ionicons@4.5.10-0/dist/ionicons.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.3/gsap.min.js"></script>
        <title>Meet</title>
    </head>

    <body>
        <div id="container-header"><img src="../imagens/tucanoHeader.png">
            <nav>
                <ul>
                    <li><a href="../www/home.html">Home</a></li>
                    <li><a href="../www/popular.html">My groups</a></li>
                    <li><a href="../www/marketplace.html">Marketplace</a></li>
                    <li><a href="../www/perfil.html">Profile</a></li>
                </ul>
            </nav>
        </div>
        <div id="page-info">
            <div id="creation-group">
                <span id="txt-creation">New group</span>
            </div>
            <div id="creation-group-button">
                <button type="button" id="plus-button">
                    <ion-icon name="add-circle-outline"></ion-icon>
                </button>
            </div>
        </div>


        <div class="menu">
            <div class="menu--wrapper">
                <% for (let i = 0; i < total; i++) { %>
                    <figure>
                        <div class="menu--item">
                            <div class="card-img">
                                <img src="/imagens/grupo.png" class="group-img">
                            </div>
                            <div class="card-span">      
                                <span><%= nome[i] %></span>
                            </div>
                            <div class="card-button">
                                <button type="submit" class="join-button">Join!</button>
                            </div>
                        </div>
                    </figure>            
                <% } %>
            </div>
        </div>




        <div class="popup">
            <div class="close-button">&times;</div>
            <form action="/criar" method="post" class="form">
                <h2>Create group</h2>
                <div class="form-element">
                    <input type="text" id="group-name" placeholder=" " name="nomeGrupo" required>
                    <label for="group-name">Name</label>
                </div>
                <div class="form-button">
                    <button type="submit">Create!</button>
                </div>
            </form>
        </div>


        <script>
            
            /*--------------------
            Vars
            --------------------*/
            const $menu = document.querySelector('.menu')
            const $items = document.querySelectorAll('.menu--item')
            const $images = document.querySelectorAll('.card-img')
            let menuWidth = $menu.clientWidth
            let itemWidth = $items[0].clientWidth
            let wrapWidth = $items.length * itemWidth

            let scrollSpeed = 0
            let oldScrollY = 0
            let scrollY = 0
            let y = 0


            /*--------------------
            Lerp
            --------------------*/
            const lerp = (v0, v1, t) => {
            return v0 * ( 1 - t ) + v1 * t
            }


            /*--------------------
            Dispose
            --------------------*/
            const dispose = (scroll) => {
            gsap.set($items, {
                x: (i) => {
                return i * itemWidth + scroll
                },
                modifiers: {
                x: (x, target) => {
                    const s = gsap.utils.wrap(-itemWidth, wrapWidth - itemWidth, parseInt(x))
                    return `${s}px`
                }
                }
            })
            } 
            dispose(0)


            /*--------------------
            Wheel
            --------------------*/
            const handleMouseWheel = (e) => {
            scrollY -= e.deltaY * 0.9
            }


            /*--------------------
            Touch
            --------------------*/
            let touchStart = 0
            let touchX = 0
            let isDragging = false
            const handleTouchStart = (e) => {
            touchStart = e.clientX || e.touches[0].clientX
            isDragging = true
            $menu.classList.add('is-dragging')
            }
            const handleTouchMove = (e) => {
            if (!isDragging) return
            touchX = e.clientX || e.touches[0].clientX
            scrollY += (touchX - touchStart) * 2.5
            touchStart = touchX
            }
            const handleTouchEnd = () => {
            isDragging = false
            $menu.classList.remove('is-dragging')
            }


            /*--------------------
            Listeners
            --------------------*/
            $menu.addEventListener('mousewheel', handleMouseWheel)

            $menu.addEventListener('touchstart', handleTouchStart)
            $menu.addEventListener('touchmove', handleTouchMove)
            $menu.addEventListener('touchend', handleTouchEnd)

            $menu.addEventListener('mousedown', handleTouchStart)
            $menu.addEventListener('mousemove', handleTouchMove)
            $menu.addEventListener('mouseleave', handleTouchEnd)
            $menu.addEventListener('mouseup', handleTouchEnd)

            $menu.addEventListener('selectstart', () => { return false })


            /*--------------------
            Resize
            --------------------*/
            window.addEventListener('resize', () => {
            menuWidth = $menu.clientWidth
            itemWidth = $items[0].clientWidth
            wrapWidth = $items.length * itemWidth
            })


            /*--------------------
            Render
            --------------------*/
            const render = () => {
            requestAnimationFrame(render)
            y = lerp(y, scrollY, .1)
            dispose(y)
            
            scrollSpeed = y - oldScrollY
            oldScrollY = y
            
            gsap.to($items, {
                skewX: -scrollSpeed * .2,
                rotate: scrollSpeed * .01,
                scale: 1 - Math.min(100, Math.abs(scrollSpeed)) * 0.003
            })
            }
            render()
        </script>


        <script>   
            document.querySelector("#plus-button").addEventListener("click", function(){
                document.querySelector(".popup").classList.add("active");
            })
            document.querySelector(".popup .close-button").addEventListener("click", function(){
                document.querySelector(".popup").classList.remove("active");
            })
            if (document.getElementById("group-name") !== valueMissing){
                document.querySelector(".popup .form-button").addEventListener("click", function(){
                document.querySelector(".popup").classList.remove("active");
            })
            }
        </script>
    </body>
</html>